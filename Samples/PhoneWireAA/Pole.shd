
struct VsIn
{
	float3 Position : Position;
	float3 Normal   : Normal;
	float2 TexCoord : TexCoord;
};

struct PsIn
{
	float4 Position : SV_Position;
	float2 TexCoord : TexCoord;
	float  Light    : Light;
};

[Vertex shader]

float4x4 WorldViewProj;
float4x4 World;

static const float3 light_dir = normalize(float3(-0.79f, 0.39f, 0.47f));

PsIn main(VsIn In)
{
	PsIn Out;

	Out.Position = mul(WorldViewProj, float4(In.Position, 1.0f));
	Out.TexCoord = In.TexCoord;

	float3 normal = mul((float3x3) World, In.Normal);

	Out.Light = saturate(dot(normal, light_dir)) + 0.02f;

	return Out;
}


[Fragment shader]

Texture2D Base;
SamplerState Filter;

float4 main(PsIn In) : SV_Target
{
	return Base.Sample(Filter, In.TexCoord) * In.Light;
}
