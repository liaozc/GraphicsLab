
struct PsIn
{
	float4 Position : SV_Position;
	float2 TexCoord : TexCoord;
};

[Vertex shader]

PsIn main(uint VertexID : SV_VertexID)
{
	PsIn Out;

	// Produce a fullscreen triangle
	float4 position;
	position.x = (VertexID == 0)? 3.0f : -1.0f;
	position.y = (VertexID == 2)? 3.0f : -1.0f;
	position.zw = 1.0f;

	Out.Position = position;
	Out.TexCoord = position.xy * float2(0.5,-0.5) + 0.5;

	return Out;
}


[Fragment shader]

Texture2D bloomT;
SamplerState Filter;

float3 main(PsIn In) : SV_Target
{
	float2 offest = float2(1.0/960.0,1.0/640.0);
	float2 lt = In.TexCoord + offest * float2(-1,-1);
	float2 ct = In.TexCoord + offest * float2(0,-1);
	float2 rt = In.TexCoord + offest * float2(1,-1);
	float2 lm = In.TexCoord + offest * float2(-1,0);
	float2 cm = In.TexCoord ;
	float2 rm = In.TexCoord + offest * float2(1,0);
	float2 lb = In.TexCoord + offest * float2(-1,1);
	float2 cb = In.TexCoord + offest * float2(0,1);
	float2 rb = In.TexCoord + offest * float2(1,1);
	float3 col = 0;

	col += bloomT.Sample(Filter, lt).rgb * 0.0947;
	col += bloomT.Sample(Filter, ct).rgb * 0.118;
	col += bloomT.Sample(Filter, rt).rgb * 0.0947;

	col += bloomT.Sample(Filter, lm).rgb * 0.118;
	col += bloomT.Sample(Filter, cm).rgb * 0.1475;
	col += bloomT.Sample(Filter, rm).rgb * 0.118;

	col += bloomT.Sample(Filter, lb).rgb * 0.0947;
	col += bloomT.Sample(Filter, cb).rgb * 0.118;
	col += bloomT.Sample(Filter, rb).rgb * 0.0947;

	return bloomT.Sample(Filter, cm) + col * 0.55 ;
	//return col;
	//return float3(offest,0);
}
