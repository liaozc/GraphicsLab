struct PsIn
{
	float4 Position : SV_Position;
	float  Shade    : Shade;
};

[Vertex shader]

struct VsIn
{
	float3 Position : Position;
};

float4x4 ViewProj;
float3 LightPos;
float3 CamPos;

void main(out PsIn Out, VsIn In)
{
	float3 normal = In.Position;
	float3 position = LightPos + 15.0f * normal;

	float3 light_dir = normalize(CamPos - position);
	float shade = saturate(dot(light_dir, normal));

	Out.Position = mul(ViewProj, float4(position, 1.0f));
	Out.Shade = shade * shade;
}

[Fragment shader]

float3 Color;

float4 main(PsIn In) : SV_Target
{
	float shade = saturate(In.Shade * 1.5f);
	return float4(Color * shade, shade);
}
