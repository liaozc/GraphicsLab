
struct PsIn
{
	float4 Position: SV_Position;
#if (SAMPLE_COUNT == 1)
	float2 TexCoord: TexCoord;
#endif
};

[Vertex shader]

PsIn main(uint VertexID : SV_VertexID)
{
	PsIn Out;

	// Produce a fullscreen triangle
	float x = (VertexID == 2)?  3.0f : -1.0f;
	float y = (VertexID == 0)? -3.0f :  1.0f;

	Out.Position = float4(x, y, 0.5f, 1.0f);
#if (SAMPLE_COUNT == 1)
	Out.TexCoord = float2(0.5f * x, -0.5f * y) + 0.5f;
#endif

	return Out;
}


[Fragment shader]

#if (SAMPLE_COUNT > 1)
Texture2DMS <float4, SAMPLE_COUNT> Base;
#else
Texture2D <float4> Base;
SamplerState Filter;
#endif

#ifdef SINGLE_SAMPLE
  #define COUNT 1
#else
  #define COUNT SAMPLE_COUNT
#endif

float Factor;

float4 main(PsIn In) : SV_Target
{
#if (SAMPLE_COUNT > 1)
	int3 tex_coord = int3(int2(In.Position.xy), 0);

	// Average all samples
	float4 base = 0;
	for (int i = 0; i < COUNT; i++)
	{
		base += (1.0f / COUNT) * Base.Load(tex_coord, i);
	}

	// Return 1 if any sample was non-zero.
	base.a = (base.a > 0.0f);
#else
	float4 base = Base.Sample(Filter, In.TexCoord);
#endif
	
	base.rgb *= 0.02f;
	// For stencil visualizations
	base.rgb += Factor * base.a;

	return base;
}
